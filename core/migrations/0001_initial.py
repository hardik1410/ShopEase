# Generated by Django 2.1.15 on 2021-06-17 09:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(db_index=True, max_length=25, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('storeId', models.IntegerField(db_column='StoreId', primary_key=True, serialize=False)),
                ('storeRefId', models.CharField(db_column='StoreRefId', max_length=10)),
                ('storeName', models.CharField(db_column='Name', max_length=100)),
                ('storeCode', models.CharField(db_column='StoreCode', max_length=30)),
                ('streetName', models.CharField(db_column='StreetName', max_length=100)),
                ('postalcode', models.CharField(db_column='Postalcode', max_length=30)),
                ('city', models.CharField(db_column='City', max_length=30)),
                ('province', models.CharField(db_column='Province', max_length=30)),
                ('primaryContact', models.CharField(blank=True, db_column='PrimaryContact', max_length=12)),
                ('secondaryContact', models.CharField(blank=True, db_column='SecondaryContact', max_length=12)),
                ('fromDate', models.DateField(db_column='FromDate')),
                ('thruDate', models.DateField(db_column='ThruDate')),
                ('creator', models.CharField(db_column='Creator', max_length=30)),
                ('created', models.DateField(db_column='Created')),
                ('modifier', models.CharField(db_column='Modifier', max_length=30)),
                ('modified', models.DateField(db_column='Modified')),
                ('ownerId', models.ForeignKey(db_column='OwnerId', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
